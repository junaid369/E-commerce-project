
<h2 class="title text-center">Add New Brands</h2>

<form action="/admin/addnewbrands" method="post" id="brand" enctype="multipart/form-data"  onsubmit="return submitForm(this)">


  <div class=" row col-lg-12">
    <div class="col-lg-6 mt-5">
      <input type="text" class="form-control mb-3" id="brand" placeholder="Brand Name" name="brand">
    </div>
    <div class="col-lg-6 mt-5">
      <input type="text" class="form-control mb-3" id="brand" placeholder="description" name="description">
    </div>
  </div>





  <div class="mt-5">
    <label for="">IMAGE 1</label>
    <img src="" alt="" style="width: 100px; height:auto" id="imgview1">
    {{!-- <div id="preview1"></div> --}}
    <input type="file" name="image" id="file1" class="form-control" onchange="return fileValidation1()">
  </div>

  <div class="col-12">
    <div id="image-box" style="width: 500px; height: 500px; display: none;"></div>
    <button class="btn btn-primary mt-3" type="button" style="display: none;" id="crop-btn">Crop</button>
  </div>



  <button id="confirm-btn" type="submit" class="btn btn-primary">Add Brand</button><br>
</form>


  
  
<script>
function fileValidation1() {
    const imagebox = document.getElementById('image-box')
    const crop_btn = document.getElementById('crop-btn')
    var fileInput = document.getElementById('file1');

    var filePath = fileInput.value;
    var allowedExtensions = /(\.jpg)$/i;
    if (!allowedExtensions.exec(filePath)) {
        alert('Please upload file having extensions .jpeg only.');
        fileInput.value = '';
        return false;
    } else {
        //Image preview
        const img_data = fileInput.files[0]
        const url = URL.createObjectURL(img_data)
        imagebox.innerHTML = `<img src="${url}" id="image" style="width:100%">`
        const image = document.getElementById('image')
        document.getElementById('image-box').style.display = 'block'
        document.getElementById('crop-btn').style.display = 'block'
        document.getElementById('confirm-btn').style.display = 'none'

        const cropper = new Cropper(image, {
            autoCropArea: 1,
            viewMode: 1,
            scalable: false,
            zoomable: false,
            movable: false,
            aspectRatio: 16 / 19,
            //  preview: '.preview',
            minCropBoxWidth: 180,
            minCropBoxHeight: 240,
        })
        crop_btn.addEventListener('click', () => {
            cropper.getCroppedCanvas().toBlob((blob) => {
                let fileInputElement = document.getElementById('file1');
                let file = new File([blob], img_data.name, { type: "image/*", lastModified: new Date().getTime() });
                let container = new DataTransfer();

                container.items.add(file);
                const img = container.files[0]
                var url = URL.createObjectURL(img)
                fileInputElement.files = container.files;
                document.getElementById('imgview1').src = url
                document.getElementById('image-box').style.display = 'none'
                document.getElementById('crop-btn').style.display = 'none'
                document.getElementById('confirm-btn').style.display = 'block'
            });
        });
    }
}

})
</script>


</script>

<script>
  function viewimageog(event) {

    document.getElementById('imagog').src = URL.createObjectURL(event.target.files[0])
    let file = event.target.files[0].name
    let extension = file.split('.').pop()
    if (extension == 'jpeg' || extension == 'png' || extension == 'jpg') {
      $('#imagog').show()
      $('#sub').show()
      $('#errMsg').hide()

    }
    else {
      $('#sub').hide()
      $('#errMsg').show()
    }
  }




</script>


function productBannerOneFileValidation() {
    var fileInput = 
        document.getElementById('productbanner1image');
      
    var filePath = fileInput.value;
  
    // Allowing file type
    var allowedExtensions = 
            /(\.jpg|\.jpeg|\.png|\.gif)$/i;
      
    if (!allowedExtensions.exec(filePath)) {
        alert('Invalid file type');
        fileInput.value = '';
        return false;
    } 
    else 
    {
      
        // Image preview 
        if (fileInput.files && fileInput.files[0]) {
            var reader = new FileReader();
            reader.onload = function(e) {
                document.getElementById(
                    'imagePreviewproductBannerOne').innerHTML = 
                    '<img style="width:120px;height:120px" src="' + e.target.result
                    + '"/>';
            };
              
            reader.readAsDataURL(fileInput.files[0]);
        }
    }
}